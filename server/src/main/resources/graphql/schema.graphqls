scalar Date

enum InputSource {
    MEASUREMENT_WELL_COLUMN,
    MEASUREMENT_SUBWELL_COLUMN,
    FEATURE
}

enum FeatureType {
    CALCULATION,
    NORMALIZATION,
    RAW
}

type PropertyDTO {
    propertyName: String
    propertyValue: String
}

type CalculationInputValueDTO {
    id: ID
    featureId: ID
    formulaId: ID
    variableName: String
    sourceMeasColName: String
    sourceFeatureId: ID
    inputSource: InputSource
}

type InputParameter {
    name: String
    value: String
}

type DRCModelDTO {
    featureId: ID
    name: String
    description: String
    method: String
    slope: String
    script: String
    inputParameters: [InputParameter]
}

type FeatureDTO {
    id: ID
    name: String
    alias: String
    description: String
    format: String
    type: FeatureType
    sequence: Int
    protocolId: ID
    formulaId: ID
    civs: [CalculationInputValueDTO]
    drcModel: DRCModelDTO
    trigger: String
    status: String

    tags: [String]
    properties: [PropertyDTO]

    deleted: Boolean
}

type ProtocolDTO {
    id: ID
    name: String
    description: String

    lowWelltype: String
    highWelltype: String
    previousVersion: String
    versionNumber: String

    tags: [String]
    properties: [PropertyDTO]

    features: [FeatureDTO]

    createdOn: Date
    createdBy: String
    updatedOn: Date
    updatedBy: String
}

type Query {
    getProtocols: [ProtocolDTO]
    getProtocolById(protocolId: ID): ProtocolDTO
    getProtocolsByTag(tag: String): [ProtocolDTO]
    getFeaturesByProtocolId(protocolId: ID): [FeatureDTO]
    getFeatureById(featureId: ID): FeatureDTO
}
